apiVersion: v1
kind: Pod
metadata:
  name: hadoop-resourcemanager-0
  namespace: default
  labels:
    hadoop-cluster: myhadoopcluster
    hadoop-component: myhadoopcluster-rm
  annotations:
    scheduler.alpha.kubernetes.io/affinity: >
        {
          "podAntiAffinity": {
            "requiredDuringSchedulingRequiredDuringExecution": [{
              "labelSelector": {
                "matchExpressions": [{
                  "key": "hadoop-component",
                  "operator": "In",
                  "values": ["myhadoopcluster-rm"]
                }]
              },
              "topologyKey": "kubernetes.io/hostname"
            }]
          }
        }
spec:
  hostname: hadoop-resourcemanager-0
  subdomain: myhadoopcluster
  restartPolicy: Never
  containers:
    - name: resourcemanager
      image: ${base}/hadoop:test
      imagePullPolicy: Always
      ports:
      - containerPort: 8032
        name: rpc
      - containerPort: 8033
        name: admin
      - containerPort: 8088
        name: web
      volumeMounts:
        - name: hadoop-conf
          mountPath: /mnt/hadoop/conf
      args:
        - resourcemanager
  volumes:
    - name: hadoop-conf
      configMap:
        name: hadoop-config
---
apiVersion: v1
kind: Pod
metadata:
  name: hadoop-resourcemanager-1
  namespace: default
  labels:
    hadoop-cluster: myhadoopcluster
    hadoop-component: myhadoopcluster-rm
  annotations:
    scheduler.alpha.kubernetes.io/affinity: >
        {
          "podAntiAffinity": {
            "requiredDuringSchedulingRequiredDuringExecution": [{
              "labelSelector": {
                "matchExpressions": [{
                  "key": "hadoop-component",
                  "operator": "In",
                  "values": ["myhadoopcluster-rm"]
                }]
              },
              "topologyKey": "kubernetes.io/hostname"
            }]
          }
        }
spec:
  hostname: hadoop-resourcemanager-1
  subdomain: myhadoopcluster
  restartPolicy: Never
  containers:
    - name: resourcemanager
      image: ${base}/hadoop:test
      imagePullPolicy: Always
      ports:
      - containerPort: 8032
        name: rpc
      - containerPort: 8033
        name: admin
      - containerPort: 8088
        name: web
      volumeMounts:
        - name: hadoop-conf
          mountPath: /mnt/hadoop/conf
      args:
        - resourcemanager
  volumes:
    - name: hadoop-conf
      configMap:
        name: hadoop-config
