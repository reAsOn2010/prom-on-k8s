global:
  scrape_interval: 10s
  external_labels:
    slave: node-3
rule_files:
  - /etc/prometheus/*.rule
# A scrape configuration for running Prometheus on a Kubernetes cluster.
# This uses separate scrape configs for cluster components (i.e. API server, node)
# and services to allow each to use different authentication configs.
#
# Kubernetes labels will be added as Prometheus labels on metrics via the
# `labelmap` relabeling action.

# Scrape config for cluster components.
scrape_configs:
- job_name: "hierarchy-exporter"
  static_configs:
    - targets: ['localhost:9101']

- job_name: "prometheus"
  static_configs:
    - targets: ['prometheus-node-3:9090']

- job_name: 'kubernetes-nodes'

  # Default to scraping over https. If required, just disable this or change to
  # `http`.
  scheme: https

  # This TLS & bearer token file config is used to connect to the actual scrape
  # endpoints for cluster components. This is separate to discovery auth
  # configuration (`in_cluster` below) because discovery & scraping are two
  # separate concerns in Prometheus.
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    # If your node certificates are self-signed or use a different CA to the
    # master CA, then disable certificate verification below. Note that
    # certificate verification is an integral part of a secure infrastructure
    # so this should only be disabled in a controlled environment. You can
    # disable certificate verification by uncommenting the line below.
    #
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - api_servers:
    - 'https://kubernetes.default.svc'
    in_cluster: true
    tls_config:
      insecure_skip_verify: true
    role: node

  relabel_configs:
  - source_labels: [__address__]
    modulus:       4    # 4 slaves
    target_label:  __tmp_hash
    action:        hashmod
  - source_labels: [__tmp_hash]
    regex:         ^3$  # This is the 2nd slave
    action:        keep
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
